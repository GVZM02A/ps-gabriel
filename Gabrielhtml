let leftPaddle;
let rightPaddle;
let ball;
let leftScore = 0;
let rightScore = 0;
let ballSpeedX = 5;
let ballSpeedY = 5;

function setup() {
  createCanvas(800, 400);
  
  // Cria as paletas
  leftPaddle = new Paddle(20, height / 2 - 40);
  rightPaddle = new Paddle(width - 40, height / 2 - 40);
  
  // Cria a bola
  ball = new Ball(width / 2, height / 2);
}

function draw() {
  background(0);
  
  // Mostra a pontuação
  fill(255);
  textSize(32);
  textAlign(CENTER, CENTER);
  text(leftScore, width / 4, 50);
  text(rightScore, 3 * width / 4, 50);
  
  // Move as paletas
  if (keyIsDown(UP_ARROW)) {
    rightPaddle.move(-10);
  } else if (keyIsDown(DOWN_ARROW)) {
    rightPaddle.move(10);
  }
  
  if (keyIsDown(87)) {
    leftPaddle.move(-10);
  } else if (keyIsDown(83)) {
    leftPaddle.move(10);
  }
  
  // Move a bola e verifica colisões
  ball.update();
  ball.checkCollision(leftPaddle);
  ball.checkCollision(rightPaddle);
  ball.checkEdges();
  ball.display();
  
  // Mostra as paletas
  leftPaddle.display();
  rightPaddle.display();
}

class Paddle {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.width = 20;
    this.height = 80;
    this.speed = 10;
  }
  
  display() {
    fill(255);
    rect(this.x, this.y, this.width, this.height);
  }
  
  update() {
    this.y = constrain(this.y, 0, height - this.height);
  }
  
  move(steps) {
    this.y += steps;
  }
}

class Ball {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.radius = 10;
  }
  
  display() {
    fill(255);
    ellipse(this.x, this.y, this.radius * 2);
  }
  
  update() {
    this.x += ballSpeedX;
    this.y += ballSpeedY;
  }
  
  checkCollision(paddle) {
    if (this.x - this.radius < paddle.x + paddle.width &&
        this.x + this.radius > paddle.x &&
        this.y - this.radius < paddle.y + paddle.height &&
        this.y + this.radius > paddle.y) {
      ballSpeedX *= -1;
    }
  }
  
  checkEdges() {
    if (this.y - this.radius < 0 || this.y + this.radius > height) {
      ballSpeedY *= -1;
    }
    
    if (this.x - this.radius < 0) {
      rightScore++;
      this.reset();
    }
    
    if (this.x + this.radius > width) {
      leftScore++;
      this.reset();
    }
  }
  
  reset() {
    this.x = width / 2;
    this.y = height / 2;
  }
}
